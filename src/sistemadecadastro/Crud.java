/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sistemadecadastro;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Windows
 */
public class Crud extends javax.swing.JFrame {

    /**
     * Creates new form CrudCreate
     */
    public Crud() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        gerenciamentoDeUsuario = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        create = new javax.swing.JPanel();
        labelNome = new javax.swing.JLabel();
        createName = new javax.swing.JTextField();
        labelUsuario = new javax.swing.JLabel();
        createUsername = new javax.swing.JTextField();
        labelEmail = new javax.swing.JLabel();
        createEmail = new javax.swing.JTextField();
        labelSenha = new javax.swing.JLabel();
        createPassword = new javax.swing.JPasswordField();
        labelConfirmarSenha = new javax.swing.JLabel();
        createConfirmPassword = new javax.swing.JPasswordField();
        labelStaff = new javax.swing.JLabel();
        createSimStaff = new javax.swing.JRadioButton();
        createNaoStaff = new javax.swing.JRadioButton();
        createBtn = new javax.swing.JButton();
        table = new javax.swing.JScrollPane();
        usuarios = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1020, 700));
        setResizable(false);
        setSize(new java.awt.Dimension(1020, 700));

        jPanel1.setBackground(new java.awt.Color(0, 71, 171));
        jPanel1.setPreferredSize(new java.awt.Dimension(1020, 100));

        gerenciamentoDeUsuario.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        gerenciamentoDeUsuario.setForeground(new java.awt.Color(255, 255, 255));
        gerenciamentoDeUsuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gerenciamentoDeUsuario.setText("Gerenciamento de usuário");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gerenciamentoDeUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(gerenciamentoDeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1020, 600));

        updateBtn.setBackground(new java.awt.Color(0, 71, 171));
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setText("ATUALIZAR");

        deleteBtn.setBackground(new java.awt.Color(0, 71, 171));
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("EXCLUIR");

        create.setBackground(new java.awt.Color(102, 102, 102));

        labelNome.setForeground(new java.awt.Color(255, 255, 255));
        labelNome.setText("Nome");

        labelUsuario.setForeground(new java.awt.Color(255, 255, 255));
        labelUsuario.setText("Usuário");

        labelEmail.setForeground(new java.awt.Color(255, 255, 255));
        labelEmail.setText("Email");

        labelSenha.setForeground(new java.awt.Color(255, 255, 255));
        labelSenha.setText("Senha");

        labelConfirmarSenha.setForeground(new java.awt.Color(255, 255, 255));
        labelConfirmarSenha.setText("Confirme a senha");

        labelStaff.setForeground(new java.awt.Color(255, 255, 255));
        labelStaff.setText("O usuário é um administrador?");

        buttonGroup1.add(createSimStaff);
        createSimStaff.setForeground(new java.awt.Color(255, 255, 255));
        createSimStaff.setText("Não");
        createSimStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createSimStaffActionPerformed(evt);
            }
        });

        buttonGroup1.add(createNaoStaff);
        createNaoStaff.setForeground(new java.awt.Color(255, 255, 255));
        createNaoStaff.setText("Sim");
        createNaoStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNaoStaffActionPerformed(evt);
            }
        });

        createBtn.setBackground(new java.awt.Color(0, 71, 171));
        createBtn.setForeground(new java.awt.Color(255, 255, 255));
        createBtn.setLabel("CADASTRAR");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createLayout = new javax.swing.GroupLayout(create);
        create.setLayout(createLayout);
        createLayout.setHorizontalGroup(
            createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(createBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(createConfirmPassword)
            .addComponent(createPassword)
            .addComponent(createEmail)
            .addComponent(createUsername)
            .addComponent(createName)
            .addGroup(createLayout.createSequentialGroup()
                .addGroup(createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelConfirmarSenha)
                    .addComponent(labelUsuario)
                    .addComponent(labelNome)
                    .addComponent(labelSenha)
                    .addComponent(labelEmail)
                    .addComponent(labelStaff))
                .addContainerGap(148, Short.MAX_VALUE))
            .addGroup(createLayout.createSequentialGroup()
                .addComponent(createNaoStaff)
                .addGap(18, 18, 18)
                .addComponent(createSimStaff)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        createLayout.setVerticalGroup(
            createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(labelNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelConfirmarSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelStaff)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createSimStaff)
                    .addComponent(createNaoStaff))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOME", "USUÁRIO", "EMAIL", "SENHA", "STAFF"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setViewportView(usuarios);
        usuarios.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(create, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(table, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(create, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(table))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        getAccessibleContext().setAccessibleName("CRUDCREATE");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createNaoStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNaoStaffActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createNaoStaffActionPerformed

    private void createSimStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createSimStaffActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createSimStaffActionPerformed

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed

        String name = createName.getText();
        String username = createUsername.getText();
        String email = createEmail.getText();
        char[] password = createPassword.getPassword();
        char[] confirmPassword = createConfirmPassword.getPassword();

        if (name.isEmpty() || username.isEmpty() || email.isEmpty() || password.length == 0) {
            JOptionPane.showMessageDialog(new JFrame(), "Todos os campos são obrigatórios", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!isValidEmail(email)) {
            showMessageDialog(null, "O formato do email é inválido.");
            return;
        }

        if (!isStrongPassword(password)) {
            showMessageDialog(null, "A senha não atende aos critérios de segurança. "
                + "A senha precisa ter no mínimo 8 caracteres, sendo pelo menos um maiúsculo, um minusculo, um número e um caractere especial.");
            return;
        }

        if (!Arrays.equals(password, confirmPassword)) {
            showMessageDialog(null, "As senhas não coincidem. Por favor, confirme a senha corretamente.");
            return;
        }

        try (Connection con = DatabaseManager.getConnection()) {

            if (userOrEmailExists(con, username, email)) {
                showMessageDialog(null, "Usuário ou email já existem. Escolha outro.");
                return;
            }

            String hashedPassword = HashUtil.hashPassword(password);

            String query = "INSERT INTO user(username, full_name, email, password, is_staff) VALUES (?, ?, ?, ?, 0)";
            try (PreparedStatement ps = con.prepareStatement(query)) {
                ps.setString(1, username);
                ps.setString(2, name);
                ps.setString(3, email);
                ps.setString(4, hashedPassword);

                ps.executeUpdate();
            }

            createName.setText("");
            createUsername.setText("");
            createEmail.setText("");
            createPassword.setText("");
            createConfirmPassword.setText("");
            showMessageDialog(null, "Conta criada com sucesso!");

            Login LOGIN = new Login();
            LOGIN.setVisible(true);
            LOGIN.pack();
            LOGIN.setLocationRelativeTo(null);
            this.dispose();

            DefaultTableModel model = (DefaultTableModel) usuarios.getModel();

            String nome = jTNome.getText();
            String usuario = jTUsuario.getText();
            String email = jTEmail.getText();
            char[] senhaChars = jPSenha.getPassword();
            String senha = new String(senhaChars);
            boolean staff = jRStaff.isSelected();

            if (nome.isEmpty() || email.isEmpty() || senha.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Faltando campos importantes", "AVISO", JOptionPane.ERROR_MESSAGE);
            } else {
                // Obter o próximo ID disponível
                int nextId = model.getRowCount() + 1;

                // Adicionar nova linha com os dados
                model.addRow(new Object[]{nextId, nome, usuario, email, senha, staff});

                // Limpar os campos de entrada
                jTNome.setText("");
                jTUsuario.setText("");
                jTEmail.setText("");
                jPSenha.setText("");
                jRStaff.setSelected(false);
            }

        } catch (SQLException e) {
            System.out.println("Erro ao acessar o banco de dados: " + e.getMessage());
        }
    }//GEN-LAST:event_createBtnActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Crud.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Crud().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel create;
    private javax.swing.JButton createBtn;
    private javax.swing.JPasswordField createConfirmPassword;
    private javax.swing.JTextField createEmail;
    private javax.swing.JTextField createName;
    private javax.swing.JRadioButton createNaoStaff;
    private javax.swing.JPasswordField createPassword;
    private javax.swing.JRadioButton createSimStaff;
    private javax.swing.JTextField createUsername;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel gerenciamentoDeUsuario;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelConfirmarSenha;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelSenha;
    private javax.swing.JLabel labelStaff;
    private javax.swing.JLabel labelUsuario;
    private javax.swing.JScrollPane table;
    private javax.swing.JButton updateBtn;
    private javax.swing.JTable usuarios;
    // End of variables declaration//GEN-END:variables
}